//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file   ObjectBase.cpp
//!
//! @brief  オブジェクト関連のソースファイル
//!
//! @date   日付		
//!
//! @author 制作者名	
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

#include "ObjectBase.h"
using namespace DirectX::SimpleMath;
using namespace DirectX;
using namespace std;

//----------------------------------------------------------------------
//! @brief コンストラクタ
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
ObjectBase::ObjectBase()
{
	m_grp_x = 0;
	m_grp_y = 0;
	m_pos_x = 0;
	m_pos_y = 0;
	m_spd_x = 0;
	m_spd_y = 0;
	m_state = 1;
}

//----------------------------------------------------------------------
//! @brief デストラクタ
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
ObjectBase::~ObjectBase()
{

}

//----------------------------------------------------------------------
//! @brief 更新処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::Update()
{

}

//----------------------------------------------------------------------
//! @brief 描画処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::Render()
{
}

//----------------------------------------------------------------------
//! @brief     座標Xの設定
//!
//! @param[in] X,Y
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::SetPos(float x, float y)
{
	m_pos_x = x;
	m_pos_y = y;
}

//----------------------------------------------------------------------
//! @brief     座標Xの設定
//!
//! @param[in] X
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::SetPosX(float x)
{
	m_pos_x = x;
}

//----------------------------------------------------------------------
//! @brief     座標Yの設定
//!
//! @param[in] Y
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::SetPosY(float y)
{
	m_pos_y = y;
}

//----------------------------------------------------------------------
//! @brief     速度Xの設定
//!
//! @param[in] X
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::SetSpdX(float x)
{
	m_spd_x = x;
}

//----------------------------------------------------------------------
//! @brief     速度Yの設定
//!
//! @param[in] Y
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::SetSpdY(float y)
{
	m_spd_y = y;
}

//----------------------------------------------------------------------
//! @brief     状態の設定
//!
//! @param[in] state
//!
//! @return なし
//----------------------------------------------------------------------
void ObjectBase::SetState(int state)
{
	m_state = state;
}

//----------------------------------------------------------------------
//! @brief     X座標の取得
//!
//! @param[in] なし
//!
//! @return		X
//----------------------------------------------------------------------
float ObjectBase::GetPosX()
{
	return m_pos_x;
}

//----------------------------------------------------------------------
//! @brief     Y座標の取得
//!
//! @param[in] なし
//!
//! @return	    Y
//----------------------------------------------------------------------
float ObjectBase::GetPosY()
{
	return m_pos_y;
}

//----------------------------------------------------------------------
//! @brief     速度Xの取得
//!
//! @param[in] なし
//!
//! @return		X
//----------------------------------------------------------------------
float ObjectBase::GetSpdX()
{
	return m_spd_x;
}

//----------------------------------------------------------------------
//! @brief     速度Yの取得
//!
//! @param[in] なし
//!
//! @return	    Y
//----------------------------------------------------------------------
float ObjectBase::GetSpdY()
{
	return m_spd_y;
}

//----------------------------------------------------------------------
//! @brief     高さの取得
//!
//! @param[in] なし
//!
//! @return	    高さ
//----------------------------------------------------------------------
int ObjectBase::GetGrpH()
{
	return m_grp_h;
}

//----------------------------------------------------------------------
//! @brief     幅の取得
//!
//! @param[in] なし
//!
//! @return	    幅
//----------------------------------------------------------------------
int ObjectBase::GetGrpW()
{
	return m_grp_w;
}

//----------------------------------------------------------------------
//! @brief     状態の取得
//!
//! @param[in] なし
//!
//! @return	    state
//----------------------------------------------------------------------
int ObjectBase::GetState()
{
	return m_state;
}

//----------------------------------------------------------------------
//! @brief ステージとの当たり判定
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
//bool ObjectBase::collisionStage(StageBase * stage)
//{
//	if (stage != nullptr)
//	{
//		if (m_pos_x	+ m_grp_w	>= stage->getPosX() &&
//			m_pos_x				<= stage->getPosX()					 &&
//			m_pos_y	+m_grp_h	>= stage->getPosY() + stage->getGrpH() &&
//			m_pos_y				= stage->getPosY())
//		{
//			return true;
//		}
//		else { return false; }
//	}
//
//	return false;
//}
